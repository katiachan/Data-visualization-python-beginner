# -*- coding: utf-8 -*-
"""Corde graphes

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aUGnq0tik1NzkS2DTOlbxodLdOguhjZr
"""

import matplotlib.pyplot as plt
import numpy as np
import scipy as sp
from numpy import polyfit
from scipy.stats import linregress
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

l = np.array([-0.4,	-0.36,	-0.32,	-0.28,	-0.25,	-0.22,	-0.19,	-0.17,	-0.14,	-0.12,	-0.1])
f = np.array([2.21,	2.17,	2.14,	2.1,	2.07,	2.05,	2.02,	1.99,	1.97,	1.94,	1.92])

plt.plot(l, f, 'o')
plt.xlabel("log(L)")
plt.ylabel("log(f)")
m, b = np.polyfit(l, f, 1)
print(linregress(l, f))
plt.plot(l, m*l + b)
plt.show()

F = np.array([1,	1.079,	1.146,	1.204,	1.255,	1.301,	1.342,	1.38,	1.415,	1.447,	1.477])
f2 = np.array([1.898,	1.934,	1.968,	1.996,	2.021,	2.045,	2.064,	2.083,	2.1,	2.114,	2.13])

plt.plot(F, f2, 'o')
plt.xlabel("log(F)")
plt.ylabel("log(f)")
m, b = np.polyfit(F, f2, 1)
print(linregress(F, f2))

plt.plot(F, m*F + b)
plt.show()

x = np.array([-0.26,	-0.187,	-0.097,	-0.046,	0.041,	0.114,	0.161,	0.204]).reshape((-1, 1))
y = np.array([2.22,	2.18,	2.14,	2.11,	2.06,	2.03,	2,	1.98])

plt.plot(x, y, 'o')
plt.xlabel("log(mu)")
plt.ylabel("log(f)")

#m, b = np.polyfit(x, y, 1) 
#plt.plot(x, m*x + b)                    to use this, take off the .reshape((-1,1))
plt.grid(True)
plt.show()

model = LinearRegression()
model.fit(x, y)
print('slope:', model.coef_)

X = np.array(x).reshape(-1, 1)
y = np.array(y)
model.fit(X, y)


y_new = np.array([2.22,	2.18,	2.14,	2.11,	2.06,	2.03,	2,	1.98]). reshape(-1, 1)
model.predict(y_new)
model.predict([[2.045]])

